plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version + "-fabric"
group = project.maven_group

repositories {
    maven { url "https://maven.gegy.dev" } //databreaker
	maven { url "https://maven.terraformersmc.com" } //modmenu
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-lifecycle-events-v1:1.4.4+a02b4463d5"
	modImplementation "net.fabricmc.fabric-api:fabric-renderer-registries-v1:3.2.3+f0bdcfa46e"
	modImplementation "net.fabricmc.fabric-api:fabric-models-v0:0.3.0+f74f7c7d7d"

	modRuntimeOnly "com.terraformersmc:modmenu:2.0.9"
	modRuntimeOnly "supercoder79:databreaker:0.2.7"
	modRuntimeOnly "com.ptsmods:devlogin:2.0"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	setupRepositories(repositories)
}

void setupRepositories(RepositoryHandler repositories) {
	repositories.maven {
		url "https://maven.pinkgoosik.ru/"
		credentials {
			username System.getenv("MAVEN_REPO_USER")
			password System.getenv("MAVEN_REPO_PASS")
		}
	}
}
